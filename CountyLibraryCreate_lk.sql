-- tables

CREATE TABLE BOOK
( BOOK_ID NUMBER(3)
, BOOK_TITLE VARCHAR2(200)
, PUBLICATION_DATE DATE
, PUBLISHER_ID NUMBER(3)
, PRECIS VARCHAR2(2000)
, CONSTRAINT BOOK_PK PRIMARY KEY (BOOK_ID)
--, CONSTRAINT BOOK_PUBLISHER_FK FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHER(PUBLISHER_ID)
);

CREATE TABLE AUTHOR
( AUTHOR_ID NUMBER(3)
, FIRST_NAME VARCHAR2(50)
, LAST_NAME VARCHAR2(50)
, DATE_OF_BIRTH DATE
, DATE_OF_DEATH DATE
, CONSTRAINT AUTHOR_PK PRIMARY KEY (AUTHOR_ID)
);

CREATE TABLE BOOK_AUTHOR
( BOOK_ID NUMBER(3)
, AUTHOR_ID NUMBER(3)
, CONSTRAINT BOOK_AUTHOR_PK PRIMARY KEY (BOOK_ID, AUTHOR_ID)
, CONSTRAINT BOOK_AUTHOR_BOOK_FK FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID)
, CONSTRAINT BOOK_AUTHOR_AUTHOR_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(AUTHOR_ID)
);

CREATE TABLE PUBLISHER
(  PUBLISHER_ID NUMBER(3)
,  PUBLISHER_NAME VARCHAR(50)
,  STREET_ADDRESS VARCHAR(60)
,  CITY VARCHAR(25)
,  STATE VARCHAR(3)
,  ZIPCODE VARCHAR(10)
,  PHONE VARCHAR(14)
,  CONSTRAINT PUBLISHER_PK PRIMARY KEY (PUBLISHER_ID)
);

CREATE TABLE REVIEWER
(  REVIEWER_ID NUMBER(3)
,  FIRST_NAME VARCHAR(40)
,  LAST_NAME VARCHAR(40)
,  CONSTRAINT REVIEWER_PK PRIMARY KEY (REVIEWER_ID)
);

CREATE TABLE CATEGORY
(  CATEGORY_ID NUMBER(3)
,  CATEGORY_NAME VARCHAR(30)
,  CONSTRAINT CATERGORY_PK PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE REVIEW
(  REVIEW_ID NUMBER(3)
,  BOOK_ID NUMBER(3)
,  REVIEWER_ID NUMBER(3)
,  REVIEW_DATE DATE
,  REVIEW VARCHAR(700)
,  CONSTRAINT REVIEW_PK PRIMARY KEY (REVIEW_ID)
,  CONSTRAINT REVIEW_BOOK_FK FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID)
,  CONSTRAINT REVIEW_REVIEWER_FK FOREIGN KEY (REVIEWER_ID) REFERENCES REVIEWER(REVIEWER_ID)
);

CREATE TABLE BOOK_CATEGORY
(  BOOK_ID NUMBER(3)
,  CATEGORY_ID NUMBER(3)
,  CONSTRAINT BOOK_CATEGORY_PK PRIMARY KEY (BOOK_ID, CATEGORY_ID)
,  CONSTRAINT BOOK_CATEGORY_BOOK_FK FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID)
,  CONSTRAINT BOOK_CATEGORY_CATEGORY_FK FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID)
);



-- sequences

CREATE SEQUENCE BOOK_SEQ INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE AUTHOR_SEQ INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE PUBLISHER_SEQ INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE REVIEWER_SEQ INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE CATEGORY_SEQ INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE REVIEW_SEQ INCREMENT BY 1 START WITH 1;

-- triggers

CREATE OR REPLACE TRIGGER INSERT_BOOK 
BEFORE INSERT ON BOOK
FOR EACH ROW
DECLARE
  NEW_ID NUMBER;
BEGIN
  SELECT BOOK_SEQ.NEXTVAL INTO NEW_ID FROM DUAL;
  :NEW.BOOK_ID := NEW_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AUTHOR 
BEFORE INSERT ON AUTHOR
FOR EACH ROW
DECLARE
  NEW_ID NUMBER;
BEGIN
  SELECT AUTHOR_SEQ.NEXTVAL INTO NEW_ID FROM DUAL;
  :NEW.AUTHOR_ID := NEW_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_PUBLISHER 
BEFORE INSERT ON PUBLISHER
FOR EACH ROW
DECLARE
  NEW_ID NUMBER;
BEGIN
  SELECT PUBLISHER_SEQ.NEXTVAL INTO NEW_ID FROM DUAL;
  :NEW.PUBLISHER_ID := NEW_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_REVIEWER 
BEFORE INSERT ON REVIEWER
FOR EACH ROW
DECLARE
  NEW_ID NUMBER;
BEGIN
  SELECT REVIEWER_SEQ.NEXTVAL INTO NEW_ID FROM DUAL;
  :NEW.REVIEWER_ID := NEW_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_CATEGORY 
BEFORE INSERT ON CATEGORY
FOR EACH ROW
DECLARE
  NEW_ID NUMBER;
BEGIN
  SELECT CATEGORY_SEQ.NEXTVAL INTO NEW_ID FROM DUAL;
  :NEW.CATEGORY_ID := NEW_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_REVIEW 
BEFORE INSERT ON REVIEW
FOR EACH ROW
DECLARE
  NEW_ID NUMBER;
BEGIN
  SELECT REVIEW_SEQ.NEXTVAL INTO NEW_ID FROM DUAL;
  :NEW.REVIEW_ID := NEW_ID;
END;
/

-- views

-- 3. List all the books in the library system with the number, title, publication date, and prï¿½s.
create view vw_book as
select book_id, book_title, publication_date, precis
from book
order by book_title;

-- Lists all the reviews in the system after listing the names of the reviewers.
CREATE VIEW VW_REVIEWS AS
SELECT R.FIRST_NAME, R.LAST_NAME, RW.REVIEW_DATE, RW.REVIEW
FROM REVIEWER R, REVIEW RW
WHERE R.REVIEWER_ID = RW.REVIEWER_ID
ORDER BY RW.REVIEW_DATE;

-- Lists all the book authors for all the books in the library system
CREATE VIEW VW_AUTHORS AS
SELECT A.FIRST_NAME, A.LAST_NAME, B.BOOK_TITLE
FROM BOOK B, AUTHOR A, BOOK_AUTHOR BA
WHERE B.BOOK_ID = BA.BOOK_ID
AND BA.AUTHOR_ID = A.AUTHOR_ID;

-- Lists all the books and their categories
CREATE VIEW VW_CATEGORIES AS
SELECT B.BOOK_TITLE, B.PRECIS, C.CATEGORY_NAME
FROM BOOK B, CATEGORY C, BOOK_CATEGORY BC
WHERE B.BOOK_ID = BC.BOOK_ID
AND C.CATEGORY_ID = BC.CATEGORY_ID;


